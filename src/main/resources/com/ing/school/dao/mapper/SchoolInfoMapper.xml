<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ing.school.dao.mapper.SchoolInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ing.school.dao.po.SchoolInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="schoolId" property="schoolId" jdbcType="INTEGER" />
    <result column="headPictureUrl" property="headPictureUrl" jdbcType="VARCHAR" />
    <result column="classess" property="classess" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ing.school.dao.po.SchoolInfo" extends="BaseResultMap" >
    <result column="synopsis" property="synopsis" jdbcType="LONGVARCHAR" />
    <result column="badge" property="badge" jdbcType="LONGVARCHAR" />
    <result column="applicationGuide" property="applicationGuide" jdbcType="LONGVARCHAR" />
    <result column="advantage" property="advantage" jdbcType="LONGVARCHAR" />
    <result column="afterGraduation" property="afterGraduation" jdbcType="LONGVARCHAR" />
    <result column="applyCondition" property="applyCondition" jdbcType="LONGVARCHAR" />
    <result column="activity" property="activity" jdbcType="LONGVARCHAR" />
    <result column="applyCase" property="applyCase" jdbcType="LONGVARCHAR" />
    <result column="accommodation" property="accommodation" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, schoolId, headPictureUrl, classess
  </sql>
  <sql id="Blob_Column_List" >
    synopsis, badge, applicationGuide, advantage, afterGraduation, applyCondition, activity, 
    applyCase, accommodation
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ing.school.dao.po.SchoolInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from schoolInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ing.school.dao.po.SchoolInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from schoolInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from schoolInfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schoolInfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ing.school.dao.po.SchoolInfoExample" >
    delete from schoolInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ing.school.dao.po.SchoolInfo" >
    insert into schoolInfo (id, schoolId, headPictureUrl, 
      classess, synopsis, badge, 
      applicationGuide, advantage, afterGraduation, 
      applyCondition, activity, applyCase, 
      accommodation)
    values (#{id,jdbcType=INTEGER}, #{schoolId,jdbcType=INTEGER}, #{headPictureUrl,jdbcType=VARCHAR}, 
      #{classess,jdbcType=VARCHAR}, #{synopsis,jdbcType=LONGVARCHAR}, #{badge,jdbcType=LONGVARCHAR}, 
      #{applicationGuide,jdbcType=LONGVARCHAR}, #{advantage,jdbcType=LONGVARCHAR}, #{afterGraduation,jdbcType=LONGVARCHAR}, 
      #{applyCondition,jdbcType=LONGVARCHAR}, #{activity,jdbcType=LONGVARCHAR}, #{applyCase,jdbcType=LONGVARCHAR}, 
      #{accommodation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ing.school.dao.po.SchoolInfo" >
    insert into schoolInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schoolId != null" >
        schoolId,
      </if>
      <if test="headPictureUrl != null" >
        headPictureUrl,
      </if>
      <if test="classess != null" >
        classess,
      </if>
      <if test="synopsis != null" >
        synopsis,
      </if>
      <if test="badge != null" >
        badge,
      </if>
      <if test="applicationGuide != null" >
        applicationGuide,
      </if>
      <if test="advantage != null" >
        advantage,
      </if>
      <if test="afterGraduation != null" >
        afterGraduation,
      </if>
      <if test="applyCondition != null" >
        applyCondition,
      </if>
      <if test="activity != null" >
        activity,
      </if>
      <if test="applyCase != null" >
        applyCase,
      </if>
      <if test="accommodation != null" >
        accommodation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="headPictureUrl != null" >
        #{headPictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="classess != null" >
        #{classess,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        #{synopsis,jdbcType=LONGVARCHAR},
      </if>
      <if test="badge != null" >
        #{badge,jdbcType=LONGVARCHAR},
      </if>
      <if test="applicationGuide != null" >
        #{applicationGuide,jdbcType=LONGVARCHAR},
      </if>
      <if test="advantage != null" >
        #{advantage,jdbcType=LONGVARCHAR},
      </if>
      <if test="afterGraduation != null" >
        #{afterGraduation,jdbcType=LONGVARCHAR},
      </if>
      <if test="applyCondition != null" >
        #{applyCondition,jdbcType=LONGVARCHAR},
      </if>
      <if test="activity != null" >
        #{activity,jdbcType=LONGVARCHAR},
      </if>
      <if test="applyCase != null" >
        #{applyCase,jdbcType=LONGVARCHAR},
      </if>
      <if test="accommodation != null" >
        #{accommodation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update schoolInfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.schoolId != null" >
        schoolId = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.headPictureUrl != null" >
        headPictureUrl = #{record.headPictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.classess != null" >
        classess = #{record.classess,jdbcType=VARCHAR},
      </if>
      <if test="record.synopsis != null" >
        synopsis = #{record.synopsis,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.badge != null" >
        badge = #{record.badge,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.applicationGuide != null" >
        applicationGuide = #{record.applicationGuide,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.advantage != null" >
        advantage = #{record.advantage,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.afterGraduation != null" >
        afterGraduation = #{record.afterGraduation,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.applyCondition != null" >
        applyCondition = #{record.applyCondition,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.activity != null" >
        activity = #{record.activity,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.applyCase != null" >
        applyCase = #{record.applyCase,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.accommodation != null" >
        accommodation = #{record.accommodation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update schoolInfo
    set id = #{record.id,jdbcType=INTEGER},
      schoolId = #{record.schoolId,jdbcType=INTEGER},
      headPictureUrl = #{record.headPictureUrl,jdbcType=VARCHAR},
      classess = #{record.classess,jdbcType=VARCHAR},
      synopsis = #{record.synopsis,jdbcType=LONGVARCHAR},
      badge = #{record.badge,jdbcType=LONGVARCHAR},
      applicationGuide = #{record.applicationGuide,jdbcType=LONGVARCHAR},
      advantage = #{record.advantage,jdbcType=LONGVARCHAR},
      afterGraduation = #{record.afterGraduation,jdbcType=LONGVARCHAR},
      applyCondition = #{record.applyCondition,jdbcType=LONGVARCHAR},
      activity = #{record.activity,jdbcType=LONGVARCHAR},
      applyCase = #{record.applyCase,jdbcType=LONGVARCHAR},
      accommodation = #{record.accommodation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update schoolInfo
    set id = #{record.id,jdbcType=INTEGER},
      schoolId = #{record.schoolId,jdbcType=INTEGER},
      headPictureUrl = #{record.headPictureUrl,jdbcType=VARCHAR},
      classess = #{record.classess,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ing.school.dao.po.SchoolInfo" >
    update schoolInfo
    <set >
      <if test="schoolId != null" >
        schoolId = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="headPictureUrl != null" >
        headPictureUrl = #{headPictureUrl,jdbcType=VARCHAR},
      </if>
      <if test="classess != null" >
        classess = #{classess,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        synopsis = #{synopsis,jdbcType=LONGVARCHAR},
      </if>
      <if test="badge != null" >
        badge = #{badge,jdbcType=LONGVARCHAR},
      </if>
      <if test="applicationGuide != null" >
        applicationGuide = #{applicationGuide,jdbcType=LONGVARCHAR},
      </if>
      <if test="advantage != null" >
        advantage = #{advantage,jdbcType=LONGVARCHAR},
      </if>
      <if test="afterGraduation != null" >
        afterGraduation = #{afterGraduation,jdbcType=LONGVARCHAR},
      </if>
      <if test="applyCondition != null" >
        applyCondition = #{applyCondition,jdbcType=LONGVARCHAR},
      </if>
      <if test="activity != null" >
        activity = #{activity,jdbcType=LONGVARCHAR},
      </if>
      <if test="applyCase != null" >
        applyCase = #{applyCase,jdbcType=LONGVARCHAR},
      </if>
      <if test="accommodation != null" >
        accommodation = #{accommodation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ing.school.dao.po.SchoolInfo" >
    update schoolInfo
    set schoolId = #{schoolId,jdbcType=INTEGER},
      headPictureUrl = #{headPictureUrl,jdbcType=VARCHAR},
      classess = #{classess,jdbcType=VARCHAR},
      synopsis = #{synopsis,jdbcType=LONGVARCHAR},
      badge = #{badge,jdbcType=LONGVARCHAR},
      applicationGuide = #{applicationGuide,jdbcType=LONGVARCHAR},
      advantage = #{advantage,jdbcType=LONGVARCHAR},
      afterGraduation = #{afterGraduation,jdbcType=LONGVARCHAR},
      applyCondition = #{applyCondition,jdbcType=LONGVARCHAR},
      activity = #{activity,jdbcType=LONGVARCHAR},
      applyCase = #{applyCase,jdbcType=LONGVARCHAR},
      accommodation = #{accommodation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ing.school.dao.po.SchoolInfo" >
    update schoolInfo
    set schoolId = #{schoolId,jdbcType=INTEGER},
      headPictureUrl = #{headPictureUrl,jdbcType=VARCHAR},
      classess = #{classess,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>